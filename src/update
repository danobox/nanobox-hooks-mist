#!/bin/bash

# First, let's make sure mist is up-to-date
# extract installed version
mist_installed=$(cat /var/nanobox/mist.md5)
# download the latest checksum
curl \
  -f \
  -k \
  -o /var/nanobox/mist.md5 \
  https://s3.amazonaws.com/tools.nanopack.io/mist/linux/amd64/mist.md5
# compare latest with installed
mist_latest=$(cat /var/nanobox/mist.md5)
if [ ! "$mist_installed" = "$mist_latest" ]; then
  echo "Mist is out of date, updating to latest"
  # stop the running Nanoagent
  sv mist stop
  # download the latest version
  curl \
    -f \
    -k \
    -o /usr/local/bin/mist \
    https://s3.amazonaws.com/tools.nanopack.io/mist/linux/amd64/mist
  # update permissions
  chmod 755 /usr/local/bin/mist
  # start the new version
  sv mist start
else
  echo "Mist is up to date."
fi

# Now let's see if our hooks are up-to-date
# extract installed version
hooks_installed=$(cat /var/nanobox/hooks.md5)
# download the latest checksum
curl \
  -f \
  -k \
  -o /var/nanobox/hooks.md5 \
  https://s3.amazonaws.com/tools.nanobox.io/hooks/mist-stable.md5
# compare latest with installed
hooks_latest=$(cat /var/nanobox/hooks.md5)
if [ ! "$hooks_installed" = "$hooks_latest" ]; then
  echo "Hooks are out of date, updating to latest"
  # download the latest version
  curl \
    -f \
    -k \
    https://s3.amazonaws.com/tools.nanobox.io/hooks/mist-stable.tgz \
      | tar -xz -C /opt/nanobox/hooks
else
  echo "Hooks are up to date."
fi
